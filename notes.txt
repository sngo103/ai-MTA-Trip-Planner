Note: All three of us have been working together via Microsoft LiveShare.
We often host on Daniel's PC, so most commits are in his name.

NEXT FIXES: 
-(Manually) fill in unlisted latitude and longitude values in stop_directory.csv
-Apply current_state structure?
-General code cleanup in subway_system.py and basic_search.py
-Route is sometimes not picking the shortest path
    -See test for  "72" "86"
    -72 (B) -> Atlantic (B/R) -> 86 (R) is better than 72 (B) to 34 (B/R) -> 86 (R)

ISSUE:
-Import loops resulting from current_state structure

NEXT STEPS:
- Have algorithm better detect which train to start/end with if the user inputs stops with many available trains
- Find a way to calculate stopsToGoal from different lines?
- ensure that the user does not need to enter the exact name of desired stops
    -there is presently no way to distinguish between stops with the same station name
        -ex: "7th Av" is a stop in Brooklyn on the F/G, a different Brooklyn stop on the B/Q, and a Manhattan stop on the B/D/E
        -the current method of relating user-inputted station names to stopIDs (mta.findStop) cannot distinguish between these different stations       
    -potential solution: use a drop-down GUI?


Things Completed:

-Much improved A* search, supporting transfers and routes in both directions
-Heuristic that takes into account latitude/longitude-based distance to the end stop, number of transfers made, and distance to the end stop (now including transfers!)
-Four-borough data set (though a few latitude and longitude values need to be inputted)
-Standardized station names in stop_directory (same types of dashes are used; "th," "rd" or "nd" are inputted for all numbered station names)
-Continuing to fix issues related to null pointers in data files
-Resolved issue in Stop class __eq__ method
-Smarter, heuristic-based train selection for starting stations with multiple line options



